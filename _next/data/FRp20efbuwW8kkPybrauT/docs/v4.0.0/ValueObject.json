{"pageProps":{"versions":["v4.0.0","v3.8.2","latest@main"],"version":"v4.0.0","def":{"qualifiedName":"ValueObject","interface":{"members":{"equals":{"name":"equals","label":"equals()","id":"equals()","doc":{"synopsis":"<p>True if this and the other Collection have value equality, as defined\nby <code><a href=\"/docs/v4.0.0/is()\">Immutable.is()</a></code>.</p>\n","description":"<p>Note: This is equivalent to <code><span class=\"token qualifier\" >Immutable</span><span class=\"token punctuation\" >.</span>is<span class=\"token punctuation\" >(</span><span class=\"token var\" >this</span><span class=\"token punctuation\" >,</span> other<span class=\"token punctuation\" >)</span></code>, but provided to\nallow for chained expressions.</p>\n","notes":[]},"signatures":[{"line":4846,"params":[{"name":"other","type":{"k":2}}],"type":{"k":5}}],"url":"/docs/v4.0.0/ValueObject#equals()"},"hashCode":{"name":"hashCode","label":"hashCode()","id":"hashCode()","doc":{"synopsis":"<p>Computes and returns the hashed identity for this Collection.</p>\n","description":"<p>The <code><a href=\"/docs/v4.0.0/ValueObject#hashCode()\">hashCode</a></code> of a Collection is used to determine potential equality,\nand is used when adding this to a <code><a href=\"/docs/v4.0.0/Set\">Set</a></code> or as a key in a <code><a href=\"/docs/v4.0.0/Map\">Map</a></code>, enabling\nlookup via a different instance.</p>\n<!-- runkit:activate -->\n<code class=\"codeBlock\"><span class=\"token keyword\" >const</span> <span class=\"token punctuation\" >{</span> <span class=\"token qualifier\" >List</span><span class=\"token punctuation\" >,</span> <span class=\"token qualifier\" >Set</span> <span class=\"token punctuation\" >}</span> <span class=\"token operator\" >=</span> require<span class=\"token punctuation\" >(</span><span class=\"token string\" >'immutable'</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> a <span class=\"token operator\" >=</span> <span class=\"token qualifier\" >List</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >[</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >,</span> <span class=\"token number\" >2</span><span class=\"token punctuation\" >,</span> <span class=\"token number\" >3</span> <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\n<span class=\"token keyword\" >const</span> b <span class=\"token operator\" >=</span> <span class=\"token qualifier\" >List</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >[</span> <span class=\"token number\" >1</span><span class=\"token punctuation\" >,</span> <span class=\"token number\" >2</span><span class=\"token punctuation\" >,</span> <span class=\"token number\" >3</span> <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\nassert<span class=\"token punctuation\" >.</span>notStrictEqual<span class=\"token punctuation\" >(</span>a<span class=\"token punctuation\" >,</span> b<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span> <span class=\"token comment\" spellcheck=\"true\">// different instances\n</span><span class=\"token keyword\" >const</span> <span class=\"token keyword\" >set</span> <span class=\"token operator\" >=</span> <span class=\"token qualifier\" >Set</span><span class=\"token punctuation\" >(</span><span class=\"token punctuation\" >[</span> a <span class=\"token punctuation\" >]</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span>\nassert<span class=\"token punctuation\" >.</span>equal<span class=\"token punctuation\" >(</span><span class=\"token keyword\" >set</span><span class=\"token punctuation\" >.</span>has<span class=\"token punctuation\" >(</span>b<span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >,</span> <span class=\"token primitive\" >true</span><span class=\"token punctuation\" >)</span><span class=\"token punctuation\" >;</span><a class=\"try-it\" data-options=\"%7B%7D\" onClick=\"runIt(this,'v4.0.0')\">run it</a></code><p>Note: hashCode() MUST return a Uint32 number. The easiest way to\nguarantee this is to return <code>myHash <span class=\"token operator\" >|</span> <span class=\"token number\" >0</span></code> from a custom implementation.</p>\n<p>If two values have the same <code><a href=\"/docs/v4.0.0/ValueObject#hashCode()\">hashCode</a></code>, they are <a href=\"https://en.wikipedia.org/wiki/Collision_(computer_science)\">not guaranteed\nto be equal</a>. If two values have different <code><a href=\"/docs/v4.0.0/ValueObject#hashCode()\">hashCode</a></code>s,\nthey must not be equal.</p>\n<p>Note: <code><a href=\"/docs/v4.0.0/ValueObject#hashCode()\">hashCode()</a></code> is not guaranteed to always be called before\n<code><a href=\"/docs/v4.0.0/ValueObject#equals()\">equals()</a></code>. Most but not all Immutable.js collections use hash codes to\norganize their internal data structures, while all Immutable.js\ncollections use equality during lookups.</p>\n","notes":[]},"signatures":[{"line":4879,"type":{"k":6}}],"url":"/docs/v4.0.0/ValueObject#hashCode()"}},"line":4838,"doc":{"synopsis":"<p>The interface to fulfill to qualify as a Value Object.</p>\n","description":"","notes":[]}},"label":"ValueObject","url":"/docs/v4.0.0/ValueObject"},"sidebarLinks":[{"label":"List","url":"/docs/v4.0.0/List"},{"label":"Map","url":"/docs/v4.0.0/Map"},{"label":"OrderedMap","url":"/docs/v4.0.0/OrderedMap"},{"label":"Set","url":"/docs/v4.0.0/Set"},{"label":"OrderedSet","url":"/docs/v4.0.0/OrderedSet"},{"label":"Stack","url":"/docs/v4.0.0/Stack"},{"label":"Range()","url":"/docs/v4.0.0/Range()"},{"label":"Repeat()","url":"/docs/v4.0.0/Repeat()"},{"label":"Record","url":"/docs/v4.0.0/Record"},{"label":"Record.Factory","url":"/docs/v4.0.0/Record.Factory"},{"label":"Seq","url":"/docs/v4.0.0/Seq"},{"label":"Seq.Keyed","url":"/docs/v4.0.0/Seq.Keyed"},{"label":"Seq.Indexed","url":"/docs/v4.0.0/Seq.Indexed"},{"label":"Seq.Set","url":"/docs/v4.0.0/Seq.Set"},{"label":"Collection","url":"/docs/v4.0.0/Collection"},{"label":"Collection.Keyed","url":"/docs/v4.0.0/Collection.Keyed"},{"label":"Collection.Indexed","url":"/docs/v4.0.0/Collection.Indexed"},{"label":"Collection.Set","url":"/docs/v4.0.0/Collection.Set"},{"label":"ValueObject","url":"/docs/v4.0.0/ValueObject"},{"label":"fromJS()","url":"/docs/v4.0.0/fromJS()"},{"label":"is()","url":"/docs/v4.0.0/is()"},{"label":"hash()","url":"/docs/v4.0.0/hash()"},{"label":"isImmutable()","url":"/docs/v4.0.0/isImmutable()"},{"label":"isCollection()","url":"/docs/v4.0.0/isCollection()"},{"label":"isKeyed()","url":"/docs/v4.0.0/isKeyed()"},{"label":"isIndexed()","url":"/docs/v4.0.0/isIndexed()"},{"label":"isAssociative()","url":"/docs/v4.0.0/isAssociative()"},{"label":"isOrdered()","url":"/docs/v4.0.0/isOrdered()"},{"label":"isValueObject()","url":"/docs/v4.0.0/isValueObject()"},{"label":"isSeq()","url":"/docs/v4.0.0/isSeq()"},{"label":"isList()","url":"/docs/v4.0.0/isList()"},{"label":"isMap()","url":"/docs/v4.0.0/isMap()"},{"label":"isOrderedMap()","url":"/docs/v4.0.0/isOrderedMap()"},{"label":"isStack()","url":"/docs/v4.0.0/isStack()"},{"label":"isSet()","url":"/docs/v4.0.0/isSet()"},{"label":"isOrderedSet()","url":"/docs/v4.0.0/isOrderedSet()"},{"label":"isRecord()","url":"/docs/v4.0.0/isRecord()"},{"label":"get()","url":"/docs/v4.0.0/get()"},{"label":"has()","url":"/docs/v4.0.0/has()"},{"label":"remove()","url":"/docs/v4.0.0/remove()"},{"label":"set()","url":"/docs/v4.0.0/set()"},{"label":"update()","url":"/docs/v4.0.0/update()"},{"label":"getIn()","url":"/docs/v4.0.0/getIn()"},{"label":"hasIn()","url":"/docs/v4.0.0/hasIn()"},{"label":"removeIn()","url":"/docs/v4.0.0/removeIn()"},{"label":"setIn()","url":"/docs/v4.0.0/setIn()"},{"label":"updateIn()","url":"/docs/v4.0.0/updateIn()"},{"label":"merge()","url":"/docs/v4.0.0/merge()"},{"label":"mergeWith()","url":"/docs/v4.0.0/mergeWith()"},{"label":"mergeDeep()","url":"/docs/v4.0.0/mergeDeep()"},{"label":"mergeDeepWith()","url":"/docs/v4.0.0/mergeDeepWith()"}]},"__N_SSG":true}